"""
Django settings for dark_coding_challenges project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from os import getenv
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from dotenv import load_dotenv

load_dotenv()  # loads the configs from .env

dotenv_path = BASE_DIR / ".env"

load_dotenv(dotenv_path)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getenv("DJANGO_SECRET_KEY", "abcd")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getenv("APP_DEBUG", False)

ALLOWED_HOSTS = ()

SOCIAL_AUTH_GITHUB_KEY = getenv("GITHUB_KEY", "GITHUB_KEY")
SOCIAL_AUTH_GITHUB_SECRET = getenv("GITHUB_SECRET", "GITHUB_SECRET")

AUTH_USER_MODEL = "users.NormalUser"
# Application definition
DEFAULT_APPS = (
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
)

PASSWORD_RESET_TIMEOUT = 3600
PROJECT_APPS = ("chat", "users.apps.UsersConfig")

THIRD_PARTY_APPS = ("daphne",)

INSTALLED_APPS = THIRD_PARTY_APPS + DEFAULT_APPS + PROJECT_APPS

MIDDLEWARE = (
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
)
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "sesame.backends.ModelBackend",
]

SESAME_MAX_AGE = 600
ROOT_URLCONF = "dark_coding_challenges.urls"

TEMPLATES = (
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
)

WSGI_APPLICATION = "dark_coding_challenges.wsgi.application"
ASGI_APPLICATION = "dark_coding_challenges.asgi.application"
sqlite_backend = BASE_DIR / "db.sqlite3"
# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

REDIS_CONNECTION_PROTOCOL = ("redis", "rediss", "unix")
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": sqlite_backend,
        "TEST": {"NAME": sqlite_backend},
    }
}
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"{REDIX_CONNECTION_PROTOCOL[0]}://127.0.0.1:6379/",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": getenv("REDIS_PASSWORD", ""),
        },
    }
}
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
PASSWORD_PREFIX = "django.contrib.auth.password_validation"
AUTH_PASSWORD_VALIDATORS = (
    {
        "NAME": f"{PASSWORD_PREFIX}.UserAttributeSimilarityValidator",
    },
    {
        "NAME": f"{PASSWORD_PREFIX}.MinimumLengthValidator",
    },
    {
        "NAME": f"{PASSWORD_PREFIX}.CommonPasswordValidator",
    },
    {
        "NAME": f"{PASSWORD_PREFIX}.NumericPasswordValidator",
    },
)


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
